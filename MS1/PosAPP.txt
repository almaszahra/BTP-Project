#ifndef SDDS_POSAPP_H
#define SDDS_POSAPP_H
#include <iostream>
#include "Utils.h"
const int cstrlen = 255;
namespace sdds
{
	class PosApp
	{
		char m_filename[cstrlen+1];
	public:
		//* - const until further functionality is added
		//** - not sure what it does yet
		//default constructor;
		PosApp(){};
		//create object using filename
		PosApp(const char* filename);
		//prevent copying
		PosApp(PosApp&) = delete;
		PosApp& operator=(PosApp&) = delete;
		//print menu and receive users choice
		void menu(/*std::istream& = std::cin, std::ostream& = std::cout*/);
		//adds an item to the pos List
		void addItem() const; //*
		//removes an item from the pos list
		void removeItem() const; //*
		//adjusts the stock of the item
		void stockItem() const; //*
		//**
		void POS() const; //*
		//**
		void saveRecs();
		//**
		void loadRecs();
		//calls utility display function
		void display(Utils& u) const;
		void run() const;
	};
}
#endif // !SDDS_POSAPP_H

//PosApp.cpp
#include PosApp.h
namespace sdds
{
	void PosApp::display(Utils& u) const
	{
		u.display(*this);
	}

	void PosApp::addItem()
	{
		std::cout << "Running addItem()" << std::endl;
	}

	void PosApp::remoteItem()
	{
		std::cout << "Running removeItem()" << std::endl;
	}

	void PosApp::stockItem()
	{
		std::cout << "Running stockItem()" << std::endl;
	}

	void PosApp::listItems()
	{
		std::cout << "Running listItems()" << std::endl;
	}

	void PosApp::POS()
	{
		std::cout << "Running POS()" << std::endl;
	}

	void PosApp::saveRecs()
	{
		std::cout << "Running saveRecs()" << std::endl;
	}

	void PosApp::loadRecs()
	{
		std::cout << "Running loadRecs()" << std::endl;
	}


	void run() const
	{
		Utils u;
		loadRecs();
		display(u);
	}


}